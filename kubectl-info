kubectl cluster-info
kubectl get all
kubectl get nodes
kubectl describe node node1
kubectl get ns
kubectl -n kube-system get all
kubectl -n kube-system get pod

kubectl drain node4 - delete all pods
kubectl delete node node4 - delete node

kubectl -n kubernetes-dashboard port-forward svc/kubernetes-dashboard-kong-proxy 8443:443
kubectl proxy

kubectl delete namespace kubernetes-dashboard

kubectl -n kube-system get deployment.apps/kubernetes-dashboard -o yaml

kubectl apply -f dashboard.yaml
kubectl delete -d dashboard.yaml

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml

-------------------------------PODS------------------------------------------
kubectl run nginx --image nginx
kubectl get pods
kubectl get pods -o wide - подробности
kubectl describe pod podname
kubectl delete pod podname

-------------------------------REPLICASET------------------------------------
kubectl create -f replicaset.yaml
kubectl get replicaset
kubectl get replicationcontroller
kubectl edit replicaset new-replica-set
kubectl delete replicaset replicasetname
kubectl replace -f replicaset.yaml - через файл обновить репликасет, увеличив кол-во реплик
kubectl scale --replicas=6 -f replicaset.yaml - через команду

-------------------------------DEPLOYMENT------------------------------------
kubectl create deployment nginx --image=nginx
kubectl create -f deployment.yaml
kubectl get deployments

kubectl apply -f deployment.yaml
kubectl set image deployment/name nginx=nginx:1.71

kubectl rollout status deployment/name
kubectl rollout history deployment/name

kubectl rollout undo deployment/name - откатить изменения

Стратегии деплоймента
Recreate - сначала удаляет, потом создаёт
RollingUpdate - удаляет один экземпляр старой версии и добавляет новый и так постепенно все.